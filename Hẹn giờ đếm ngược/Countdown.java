/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import javax.swing.Timer;
import java.io.File;
import java.io.IOException;
import javax.sound.sampled.*;
/**
 *
 * @author Admin
 */
public class Countdown extends javax.swing.JPanel {
    Timer timer;
    int second, minute, hour;
    String ddSecond, ddMinute, ddHour;
    DecimalFormat dFormat = new DecimalFormat("00");
    Clip clip;
    boolean paused = false;
    
    /**
     * Creates new form Countdown
     */
    public Countdown() {
        initComponents();
        stopButton.setEnabled(false);
        pauseButton.setEnabled(false);
        counterLabel.setText("00:00:00");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        set_Time_Panel = new javax.swing.JPanel();
        minSpin = new javax.swing.JSpinner();
        secSpin = new javax.swing.JSpinner();
        hourSpin = new javax.swing.JSpinner();
        hourButton = new javax.swing.JLabel();
        minLabel = new javax.swing.JLabel();
        secLabel = new javax.swing.JLabel();
        counterLabel = new javax.swing.JLabel();
        pauseButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(700, 500));

        mainPanel.setPreferredSize(new java.awt.Dimension(700, 500));

        set_Time_Panel.setBackground(new java.awt.Color(51, 204, 255));
        set_Time_Panel.setPreferredSize(new java.awt.Dimension(700, 500));

        minSpin.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        minSpin.setModel(new javax.swing.SpinnerNumberModel(0, 0, 60, 1));

        secSpin.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        secSpin.setModel(new javax.swing.SpinnerNumberModel(0, 0, 60, 1));

        hourSpin.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        hourSpin.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        hourSpin.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                hourSpinInputMethodTextChanged(evt);
            }
        });

        hourButton.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        hourButton.setForeground(new java.awt.Color(0, 153, 204));
        hourButton.setText("Hour");

        minLabel.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        minLabel.setForeground(new java.awt.Color(0, 153, 204));
        minLabel.setText("Minute");

        secLabel.setBackground(new java.awt.Color(0, 170, 230));
        secLabel.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        secLabel.setForeground(new java.awt.Color(0, 153, 204));
        secLabel.setText("Second");

        counterLabel.setFont(new java.awt.Font("sansserif", 1, 60)); // NOI18N
        counterLabel.setText("00:00:00");

        pauseButton.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        pauseButton.setText("Pause");
        pauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseButtonActionPerformed(evt);
            }
        });

        resetButton.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        startButton.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stopButton.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout set_Time_PanelLayout = new javax.swing.GroupLayout(set_Time_Panel);
        set_Time_Panel.setLayout(set_Time_PanelLayout);
        set_Time_PanelLayout.setHorizontalGroup(
            set_Time_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(set_Time_PanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(set_Time_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(set_Time_PanelLayout.createSequentialGroup()
                        .addComponent(hourButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hourSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(minLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(secLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(secSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))
                    .addGroup(set_Time_PanelLayout.createSequentialGroup()
                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, set_Time_PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(set_Time_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pauseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(counterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(127, 127, 127))
        );
        set_Time_PanelLayout.setVerticalGroup(
            set_Time_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(set_Time_PanelLayout.createSequentialGroup()
                .addGroup(set_Time_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(set_Time_PanelLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(set_Time_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hourSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(secSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(set_Time_PanelLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(minLabel))))
                    .addGroup(set_Time_PanelLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(hourButton))
                    .addGroup(set_Time_PanelLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(secLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(counterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(set_Time_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pauseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addComponent(set_Time_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(set_Time_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
        );
    }// </editor-fold>                      

    private void hourSpinInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_hourSpinInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_hourSpinInputMethodTextChanged

    private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseButtonActionPerformed
        // TODO add your handling code here:
        if (paused == false){
            paused = true;
            pauseButton.setText("Resume");
            timer.stop();
        }
        else {
            paused = false;
            pauseButton.setText("Pause");
            timer.start();
        }
    }//GEN-LAST:event_pauseButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        startButton.setEnabled(true);
        pauseButton.setEnabled(false);
        mainPanel.remove(set_Time_Panel);
        mainPanel.add(set_Time_Panel);
        counterLabel.setText("00:00:00");
        hourSpin.setValue(0);
        minSpin.setValue(0);
        secSpin.setValue(0);
        timer.stop();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
        startButton.setEnabled(false);
        pauseButton.setEnabled(true);
        hour = (int) hourSpin.getValue(); ddHour = dFormat.format(hour);
        minute =  (int) minSpin.getValue(); ddMinute = dFormat.format(minute);
        second =  (int) secSpin.getValue(); ddSecond = dFormat.format(second);
        if (hour==0 && minute==0 && second==0){
            
        }
        else{
            counterLabel.setText(ddHour + ":" + ddMinute + ":" + ddSecond);
            countdownTimer();
            timer.start();     
        } 
    }//GEN-LAST:event_startButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        // TODO add your handling code here:
        startButton.setEnabled(true);
        pauseButton.setEnabled(false);
        stopButton.setEnabled(false);
        clip.stop();
    }//GEN-LAST:event_stopButtonActionPerformed

    // play sound
    public void playSound() throws UnsupportedAudioFileException, IOException, LineUnavailableException{
        File file = new File("audio.wav");
        AudioInputStream audioStream = AudioSystem.getAudioInputStream(file);
        clip = AudioSystem.getClip();
        clip.open(audioStream);
        clip.start();
    }
    // run time
    public void countdownTimer() {
		
        timer = new Timer(1000, new ActionListener() {
			
            @Override
            public void actionPerformed(ActionEvent e) {
                second--;
		ddSecond = dFormat.format(second);
		ddMinute = dFormat.format(minute);	
		ddHour = dFormat.format(hour);
		counterLabel.setText(ddHour + ":" + ddMinute + ":" + ddSecond);
                
		if(second==-1) {
                    second = 59;
                    minute--;
                    if (minute ==-1) {
			minute = 59;
			second = 59;
			hour--;
			ddSecond = dFormat.format(second);
			ddMinute = dFormat.format(minute);
			ddHour = dFormat.format(hour);	
			counterLabel.setText(ddHour + ":" + ddMinute + ":" + ddSecond);
                    }	
                    ddSecond = dFormat.format(second);
                    ddMinute = dFormat.format(minute);
                    ddHour = dFormat.format(hour);	
                    counterLabel.setText(ddHour + ":" + ddMinute + ":" + ddSecond);
                }
		if(minute<=0 && second<=0 && hour<=0) {
                    
                    
                        try {
                            playSound();
                        } catch (UnsupportedAudioFileException | IOException | LineUnavailableException e1) {
                            // TODO Auto-generated catch block
                            e1.printStackTrace();
                        }
                        stopButton.setEnabled(true);
                        timer.stop();
                    
                    
		}
            }
	});		
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel counterLabel;
    private javax.swing.JLabel hourButton;
    private javax.swing.JSpinner hourSpin;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel minLabel;
    private javax.swing.JSpinner minSpin;
    private javax.swing.JButton pauseButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JLabel secLabel;
    private javax.swing.JSpinner secSpin;
    private javax.swing.JPanel set_Time_Panel;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables
}
